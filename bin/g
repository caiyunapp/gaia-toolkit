#!/usr/bin/env bash

quit () {
    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r 2>/dev/null
    fi

    if [ -n "$_OLD_PS1" ] ; then
        PS1="$_OLD_PS1"
        export PS1
        unset _OLD_PS1
    fi

    unset GAIA_ROLE
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f ops
    fi
}

# unset irrelevant variables
quit nondestructive

CLR_NOR="\x1b[0m"  # back to NORMAL
CLR_BOLD="\x1b[1m" # BOLD text
CLR_RED="\x1b[31m" # RED text
CLR_GRN="\x1b[32m" # GREEN text
CLR_YLW="\x1b[33m" # YELLOW text

set_ps () {
    if [ -z "$GAIA_DISABLE_PROMPT" ] ; then
        if [ "x" != x ] ; then
            PS1="$PS1"
        else
            PS1="\e[0;31m[$GAIA_ROLE:$GAIA_ENV]\e[m"
        fi
        export PS1
    fi

    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r 2>/dev/null
    fi
}

os_install () {
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
        # We assume debian-like linux is used
        sudo apt-get install $@
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        # Mac OSX and we assume brew is installed
        brew install $@
    else
        # Unknown OS
        echo -e "${CLR_RED}Unknown OS!${CLR_NOR}"
        exit -1
    fi
}

mk_ubin () {
    mkdir -p ~/bin
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
        # We assume debian-like linux is used
        `echo "export PATH=/Users/$USER/bin:\$PATH"` >> ~/.bashrc
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        # Mac OSX and we assume brew is installed
        `echo "export PATH=/home/$USER/bin:\$PATH"` >> ~/.bashrc
    else
        # Unknown OS
        echo -e "${CLR_RED}Unknown OS!${CLR_NOR}"
        exit -1
    fi
    source ~/.bashrc
}

setup () {
    echo -e "${CLR_BOLD}Install OS packages ...${CLR_NOR}"
    os_install git curl redis
    echo -e "${CLR_BOLD}Install OS packages ...${CLR_GRN}Done${CLR_NOR}"

    echo -e "${CLR_BOLD}Install pip ...${CLR_NOR}"
    curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | sudo python2.7
    echo -e "${CLR_BOLD}Install pip ...${CLR_GRN}Done${CLR_NOR}"

    echo -e "${CLR_BOLD}Install python packages ...${CLR_NOR}"
    sudo pip install virtualenv sh pyCLI
    echo -e "${CLR_BOLD}Install python packages ...${CLR_GRN}Done${CLR_NOR}"

    echo -e "${CLR_BOLD}Setup gaia ...${CLR_NOR}"
    mkdir -p ~/.gaia
    rm -rf ~/.gaia/*
    cd ~/.gaia
    git clone git@github.com:caiyunapp/gaia-toolkit.git

    mk_ubin
    cd ~/bin
    ln -s ~/.gaia/gaia-toolkit/bin/g .
    ln -s ~/.gaia/gaia-toolkit/bin/d .
    ln -s ~/.gaia/gaia-toolkit/bin/o .
    echo -e "${CLR_BOLD}Setup gaia ...${CLR_GRN}Done${CLR_NOR}"
}

subcall () {
    if [ "$1" == "" ] ; then
      cd $GAIA_HOME
    else
      array=( $@ )
      len=${#array[@]}
      args=${array[@]:1:$len}
      cmd="${CUR}/../scripts/$1.py"

      cd ${CUR}/../
      $cmd --cwd $ORG $args
      cd ${ORG}
    fi
}

command -v d >/dev/null 2>&1 || setup


